<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Crop AI Diagnostic</title>
  <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&display=swap" rel="stylesheet" />
  <style>
    :root {
      --bg-color: #ffffff;
      --text-color: #121212;
      --primary-color: #2d6a4f;
      --secondary-color: #40916c;
      --box-shadow: rgba(0, 0, 0, 0.1);
      --card-bg: #f8f8f8;
    }

    .dark-theme {
      --bg-color: #000000;
      --text-color: #eeeeee;
      --primary-color: #2d6a4f;
      --secondary-color: #40916c;
      --box-shadow: rgba(255, 255, 255, 0.2);
      --card-bg: #121212;
    }

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Nunito', sans-serif;
    }

    body {
      background: var(--bg-color);
      color: var(--text-color);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      min-height: 100vh;
      padding: 20px;
      transition: background 0.3s, color 0.3s;
    }

    header {
      margin-top: 7rem;
      margin-bottom: 30px;
      text-align: center;
    }

    header h1 {
      font-size: 2.2rem;
      color: var(--text-color);
    }

    .upload-section {
      background: var(--card-bg);
      height: 20rem;
      width: 40rem;
      border: 1px solid var(--text-color);
      padding: 20px;
      margin-bottom: 1rem;
      border-radius: 15px;
      box-shadow: 0 8px 5px var(--box-shadow);
      text-align: center;
    }

    .upload-section input {
      margin: 20px 0;
    }

    .upload-section button {
      background: var(--primary-color);
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 8px;
      font-size: 1rem;
      cursor: pointer;
      transition: 0.3s;
    }

    .upload-section button:hover {
      background: var(--secondary-color);
    }

    .result-section {
      margin-top: 30px;
      background: var(--card-bg);
      padding: 20px;
      border-radius: 15px;
      box-shadow: 0 8px 25px var(--box-shadow);
      width: 100%;
      max-width: 500px;
      display: none;
      text-align: center;
    }

    .navbar {
      width: 85%;
      position: fixed;
      margin-top: 3px;
      border-radius: 9px;
      backdrop-filter: blur(7px);
      -webkit-backdrop-filter: blur(7px);
      box-shadow: 0 0 10px var(--box-shadow);
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 50px;
      margin-left: 7.5%;
      z-index: 10;
      transition: background 0.3s;
    }

    .navbar .logo {
      font-size: 24px;
      font-weight: 700;
      color: var(--text-color);
      margin-left: 10px;
    }

    .navbar ul {
      display: flex;
      align-items: center;
      list-style: none;
    }

    .navbar ul li {
      margin-left: 20px;
    }

    .navbar ul li a {
      font-size: 16px;
      color: var(--text-color);
      padding: 8px 12px;
      border-radius: 8px;
      transition: color 0.3s, background 0.3s;
      text-decoration: none;
    }

    .navbar ul li a:hover {
      color: #ffffff;
      background: #7373788a;
    }

    footer {
      margin-top: 10rem;
      background: var(--card-bg);
      width: 100%;
      color: var(--text-color);
      text-align: center;
      padding: 5px 20px;
      position: sticky;
      bottom: 0;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    footer .right a {
      color: var(--text-color);
      text-decoration: none;
      font-size: 12px;
      transition: color 0.3s;
    }

    footer .right a:hover {
      color: #BB86FC;
    }

    .theme-toggle {
      background: rgba(255, 255, 255, 0.05);
      border: 1px solid rgba(255,255,255,0.08);
      border-radius: 20px;
      padding: 5px 15px;
      color: var(--text-color);
      cursor: pointer;
      font-weight: 600;
      transition: all 0.3s ease;
    }

    .theme-toggle:hover {
      background: var(--secondary-color);
      color: white;
      transform: translateY(-2px);
    }

  </style>
</head>
<body class="dark-theme">

  <nav class="navbar">
    <div class="logo-container">
      <div class="logo">Kisan Sahayak</div>
    </div>
    <ul>
      <li><a href="/home">Home</a></li>
      <li><a href="/logout">Logout</a></li>
      <button class="theme-toggle" onclick="toggleTheme()">&#127769;</button>
    </ul>
  </nav>

  <header>
    <h1>Crop AI Diagnostic</h1>
    <p>Upload your crop image to detect diseases using AI.</p>
  </header>

  <div class="upload-section">
    <h2 style="color: var(--primary-color);">Upload Crop Image</h2>
    <input type="file" id="imageInput" accept="image/*">
    <button onclick="analyzeCrop()">Analyze</button>
  </div>

  <div class="result-section" id="result">
    <h2>Diagnosis Result</h2>
    <p id="resultText">AI is analyzing your image...</p>
  </div>

  <footer>
    <div class="left">
      <p>&copy; 2025 Kisan Sahayak. All Rights Reserved.</p>
    </div>
    <div class="right">
      <a href="#privacy-policy">Privacy Policy</a>
      <a href="#terms-conditions">Terms & Conditions</a>
      <a href="#cookie-policy">Cookie Policy</a>
    </div>
  </footer>

<script>
  async function analyzeCrop() {
    const input = document.getElementById('imageInput');
    const result = document.getElementById('result');
    const resultText = document.getElementById('resultText');

    if (input.files.length === 0) {
      alert('Please upload a crop image!');
      return;
    }

    result.style.display = 'block';
    resultText.textContent = 'Converting image...';

    const file = input.files[0];
    const toBase64 = file => new Promise((resolve, reject) => {
      const reader = new FileReader();
      reader.readAsDataURL(file);
      reader.onload = () => resolve(reader.result);
      reader.onerror = reject;
    });

    try {
      const base64 = await toBase64(file);

      const payload = JSON.stringify({
        images: [base64],
        latitude: 49.207,
        longitude: 16.608,
        similar_images: true
      });

      const response = await fetch("https://crop.kindwise.com/api/v1/identification", {
        method: 'POST',
        headers: {
          'Api-Key': '9hBVzc0eK2rVpkeceDl0YQwHuhK1Jsg22sdRS709p0PZ3Dxv10',
          'Content-Type': 'application/json'
        },
        body: payload
      });

      if (!response.ok) throw new Error(`HTTP ${response.status}`);

      const data = await response.json();
      const disease = data.result.disease.suggestions[0];
      const crop = data.result.crop.suggestions[0];

      resultText.innerHTML = `
        <p><strong>Crop:</strong> ${crop.name} (${crop.scientific_name})</p>
        <p><strong>Disease:</strong> ${disease.name} (${disease.scientific_name})</p>
        <p><strong>Probability of Disease:</strong> ${disease.probability * 100}%</p>
        <img src="${disease.similar_images[0].url}" alt="Disease Image" style="width: 100%; max-width: 400px;">
        <p>Check similar images for reference.</p>
        <img src="${crop.similar_images[0].url}" alt="Crop Image" style="width: 100%; max-width: 400px;">
      `;
    } catch (error) {
      console.error(error);
      resultText.textContent = `Error: ${error.message}`;
    }
  }

  // Theme toggler
  function toggleTheme() {
    const body = document.body;
    body.classList.toggle('dark-theme');
    const isDark = body.classList.contains('dark-theme');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  }

  // Load theme from local storage
  window.addEventListener('DOMContentLoaded', () => {
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'light') {
      document.body.classList.remove('dark-theme');
    } else {
      document.body.classList.add('dark-theme');
    }
  });
</script>

</body>
</html>
